@model IEnumerable<Department>


@{
    ViewData["Title"] = "Index";

    string ViewDataMessage = ViewData["Message"] as string; // Enforce Type Safety [Requires Type Conversion] => Strongly Typed Lang 

    string ViewBagMessage = ViewBag.Message; // Can't Enforce Type Safety [Not Requires Type Conversion] => Weakly Typed Lang
}

@* <div class="alert alert-warning">@ViewData["Message"]</div>*@

@* <div class="alert alert-success">@ViewBag.Message</div> *@

<h1>All Departments</h1>
<br />
<br />

<a asp-controller="Department" asp-action="Create" class="btn btn-primary">Create New Department</a>

<br />

@if(Model.Count() > 0)
{
    <table class="mt-4 table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(D => D.Code)</th>
                <th>@Html.DisplayNameFor(D => D.Name)</th>
                <th>@Html.DisplayNameFor(D => D.DateOfeCreation)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var department in Model)
            {
                <tr>
                    <td>@department.Code</td>
                    <td>@department.Name</td>
                    <td>@department.DateOfeCreation</td>
                    

                    <partial name="_ButtonsPartial" model="@department.Id"/>
                </tr>
            }
        </tbody>

    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There Is No Department :(</h3>
    </div>
}

